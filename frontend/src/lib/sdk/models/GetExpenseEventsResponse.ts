/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExpenseEvent } from './ExpenseEvent';
import {
    ExpenseEventFromJSON,
    ExpenseEventFromJSONTyped,
    ExpenseEventToJSON,
    ExpenseEventToJSONTyped,
} from './ExpenseEvent';

/**
 * 
 * @export
 * @interface GetExpenseEventsResponse
 */
export interface GetExpenseEventsResponse {
    /**
     * 
     * @type {Array<ExpenseEvent>}
     * @memberof GetExpenseEventsResponse
     */
    expenseEvents: Array<ExpenseEvent>;
}

/**
 * Check if a given object implements the GetExpenseEventsResponse interface.
 */
export function instanceOfGetExpenseEventsResponse(value: object): value is GetExpenseEventsResponse {
    if (!('expenseEvents' in value) || value['expenseEvents'] === undefined) return false;
    return true;
}

export function GetExpenseEventsResponseFromJSON(json: any): GetExpenseEventsResponse {
    return GetExpenseEventsResponseFromJSONTyped(json, false);
}

export function GetExpenseEventsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetExpenseEventsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'expenseEvents': ((json['expenseEvents'] as Array<any>).map(ExpenseEventFromJSON)),
    };
}

export function GetExpenseEventsResponseToJSON(json: any): GetExpenseEventsResponse {
    return GetExpenseEventsResponseToJSONTyped(json, false);
}

export function GetExpenseEventsResponseToJSONTyped(value?: GetExpenseEventsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'expenseEvents': ((value['expenseEvents'] as Array<any>).map(ExpenseEventToJSON)),
    };
}

