/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ConfirmUserResponse,
} from '../models/index';
import {
    ConfirmUserResponseFromJSON,
    ConfirmUserResponseToJSON,
} from '../models/index';

export interface ConfirmUserRequest {
    token: string;
}

/**
 * 
 */
export class UserApi extends runtime.BaseAPI {

    /**
     * Confirm a new user
     */
    async confirmUserRaw(requestParameters: ConfirmUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ConfirmUserResponse>> {
        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling confirmUser().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['token'] != null) {
            queryParameters['token'] = requestParameters['token'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/user/confirm`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConfirmUserResponseFromJSON(jsonValue));
    }

    /**
     * Confirm a new user
     */
    async confirmUser(requestParameters: ConfirmUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ConfirmUserResponse> {
        const response = await this.confirmUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
