name: Build
on:
  push:
    branches:
      - develop
    tags:
      - "v*"

jobs:
  backend_dist:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      actions: read
      security-events: write
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "corretto"
          server-id: github
          settings-path: ${{ github.workspace }}
          cache: "maven"
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: ./mvnw -B package --file pom.xml
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend
          path: |
            ./backend/target/billtracker-backend-1.0.0.jar
  
  backend_oci_image:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./backend
    needs:
      - backend_dist
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
      
      - name: Set Target
        uses: ./.github/actions/set-target

      - uses: actions/download-artifact@v4
        with:
          name: backend
          path: ./backend

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ghcr.io/kerosene-labs/billtracker-backend:${{ env.TARGET }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  frontend_dist:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      actions: read
      security-events: write
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install NPM Packages
        run: npm i

      - name: Set Target
        uses: ./.github/actions/set-target

      - name: Build Distributable for Target
        uses: ./.github/actions/target-specific-command
        with:
          working_directory: ./frontend
          production: npm run build -- --mode=production
          develop: npm run build -- --mode=develop
      - run: ls
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: ./frontend/build

  frontend_oci_image:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./frontend
    needs:
      - frontend_dist
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACCESS_TOKEN }}
      
      - name: Set Target
        uses: ./.github/actions/set-target

      - uses: actions/download-artifact@v4
        with:
          name: frontend
          path: ./frontend/build
      
      - name: Install NPM Packages
        run: npm i

      - run: ls
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ghcr.io/kerosene-labs/billtracker-frontend:${{ env.TARGET }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  frontend_deploy:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./frontend
    needs:
      - frontend_oci_image
    steps:
      - uses: actions/checkout@v4

      - name: Remote Command on Infrastructure
        uses: ./.github/actions/remote-command
        with:
          bastion_private_key: ${{ secrets.BASTION_PRIVATE_KEY }}
          bastion_ssh_user: ${{ secrets.BASTION_SSH_USER }}
          bastion_ssh_host: ${{ secrets.BASTION_HOST }}
          deployment_private_key: ${{secrets.DEPLOYMENT_PRIVATE_KEY}}
          deployment_ssh_user: infra
          deployment_server: mars1d
          command: ls