/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI
 * OpenAPI
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HandleOAuth2TokenResponse,
  HandleTokenRequest,
} from '../models/index';
import {
    HandleOAuth2TokenResponseFromJSON,
    HandleOAuth2TokenResponseToJSON,
    HandleTokenRequestFromJSON,
    HandleTokenRequestToJSON,
} from '../models/index';

export interface HandleTokenOperationRequest {
    handleTokenRequest: HandleTokenRequest;
}

/**
 * 
 */
export class OAuth2Api extends runtime.BaseAPI {

    /**
     */
    async handleTokenRaw(requestParameters: HandleTokenOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<HandleOAuth2TokenResponse>> {
        if (requestParameters['handleTokenRequest'] == null) {
            throw new runtime.RequiredError(
                'handleTokenRequest',
                'Required parameter "handleTokenRequest" was null or undefined when calling handleToken().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/oauth/google`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: HandleTokenRequestToJSON(requestParameters['handleTokenRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => HandleOAuth2TokenResponseFromJSON(jsonValue));
    }

    /**
     */
    async handleToken(requestParameters: HandleTokenOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<HandleOAuth2TokenResponse> {
        const response = await this.handleTokenRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
