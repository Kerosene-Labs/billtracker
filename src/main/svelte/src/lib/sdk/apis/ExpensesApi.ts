/* tslint:disable */
/* eslint-disable */
/**
 * API Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateOneOffExpenseRequest,
  GetExpenseEventsResponse,
} from '../models/index';
import {
    CreateOneOffExpenseRequestFromJSON,
    CreateOneOffExpenseRequestToJSON,
    GetExpenseEventsResponseFromJSON,
    GetExpenseEventsResponseToJSON,
} from '../models/index';

export interface CreateOneOffRequest {
    createOneOffExpenseRequest: CreateOneOffExpenseRequest;
}

/**
 * 
 */
export class ExpensesApi extends runtime.BaseAPI {

    /**
     */
    async createOneOffRaw(requestParameters: CreateOneOffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createOneOffExpenseRequest'] == null) {
            throw new runtime.RequiredError(
                'createOneOffExpenseRequest',
                'Required parameter "createOneOffExpenseRequest" was null or undefined when calling createOneOff().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/expenses/oneOff`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateOneOffExpenseRequestToJSON(requestParameters['createOneOffExpenseRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async createOneOff(requestParameters: CreateOneOffRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.createOneOffRaw(requestParameters, initOverrides);
    }

    /**
     */
    async getExpensesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetExpenseEventsResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/expenses`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetExpenseEventsResponseFromJSON(jsonValue));
    }

    /**
     */
    async getExpenses(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetExpenseEventsResponse> {
        const response = await this.getExpensesRaw(initOverrides);
        return await response.value();
    }

}
